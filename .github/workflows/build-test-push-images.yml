name: "Build Test and Push Docker Images"

on:
  workflow_dispatch: # Allows manual triggering from the Actions tab
  # schedule:
  #   - cron: '0 14 * * 1'  # Runs every Monday at 10:00 AM EDT

jobs:
  define_jobs:
    name: Define Jobs
    runs-on: ubuntu-latest
    outputs:
      jobs: ${{ steps.generate-jobs.outputs.jobs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Generate jobs
        # id: generate-jobs
        # run: |
          # jobs=$(jq -c '
            # to_entries[] |
            # select(.key | test("^\\d+\\.\\d+$")) | # Exclude preview versions like `3.4-rc`
            # select(.value != null) | # Exclude empty versions
            # .value.variants[] as $variant |
            # {
              # minor_version: .key,
              # patch_version: .value.version,
              # variant: $variant
            # }
          # ' versions.json | jq -s '.')
          # echo "jobs=$(echo $jobs | jq -c)" >> "$GITHUB_OUTPUT"

      # Temporary generate-jobs step to create a single job for testing
      - name: Generate Jobs
        id: generate-jobs
        run: |
          jobs=$(jq -n -c '[{
            "minor_version": "3.1",
            "patch_version": "3.1.6",
            "variant": "slim-bullseye"
          }]')
          echo "jobs=$jobs" >> "$GITHUB_OUTPUT"

  build_test_push:
    name: "Build Test and Push Ruby ${{ matrix.patch_version}} for ${{ matrix.variant }}"
    needs: define_jobs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.define_jobs.outputs.jobs) }}
    env:
      PATCH_VERSION_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/ruby:${{ matrix.patch_version }}-${{ matrix.variant }}-jemalloc
      MINOR_VERSION_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/ruby:${{ matrix.minor_version }}-${{ matrix.variant }}-jemalloc
    steps:
      - name: Checkout repository
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Ref: https://docs.docker.com/build/ci/github-actions/test-before-push/
      - name: Build and export to local Docker cache
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.minor_version }}/${{ matrix.variant }}
          dockerfile: Dockerfile
          load: true # Load the image into the local Docker cache for testing
          tags: ${{ env.PATCH_VERSION_TAG }}

      # TODO: Add better smoke tests
      - name: Test Docker image
        run: docker run --rm ${{ env.PATCH_VERSION_TAG }} ruby -v

      - name: Build multi-platform and push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.minor_version }}/${{ matrix.variant }}
          dockerfile: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.PATCH_VERSION_TAG }},${{ env.MINOR_VERSION_TAG }}
